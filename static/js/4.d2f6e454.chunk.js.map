{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","dlgs","dialog","active","name","Messages","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogsData","map","dlg","messagesElements","messagesData","msg","newMessageBody","css","dialogs","dialogs_items","messages","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,4B,qJCG5IC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKC,MAAMN,OAGT,cAACG,EAAD,eAAeE,KAAKC,QAFhB,cAAC,IAAD,CAAUC,GAAI,eALU,GAEXC,IAAML,WAWtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,2FCL9DM,EAVI,SAACJ,GAChB,IAAIK,EAAO,aAAeL,EAAMM,GAEhC,OACI,qBAAKC,UAAWC,IAAKC,OAAS,GAAKD,IAAKE,OAAxC,SACI,cAAC,IAAD,CAAST,GAAII,EAAb,SAAoBL,EAAMW,UCCvBC,EANE,SAACZ,GACd,OACI,qBAAKO,UAAWC,IAAKK,QAArB,SAA+Bb,EAAMa,W,yCCuCvCC,EAAeC,YAAiB,IAahCC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAXL,SAACjB,GAEpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,YAAa,qBAC3DC,SAAU,CAACC,IAAUZ,KACzB,gDASGa,EArDC,SAAC3B,GAEb,IAAIP,EAAQO,EAAM4B,YAEZC,EAAkBpC,EAAMqC,YAAYC,KACtC,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAIrB,KAAmBL,GAAI0B,EAAI1B,IAAhB0B,EAAI1B,OAG1C2B,EAAmBxC,EAAMyC,aAAaH,KACxC,SAAAI,GAAG,OAAI,cAAC,EAAD,CAAUtB,QAASsB,EAAItB,QAAsBP,GAAI6B,EAAI7B,IAAhB6B,EAAI7B,OAE7Bb,EAAM2C,eAM7B,OAAKpC,EAAMN,OAKP,sBAAKa,UAAW8B,IAAIC,QAApB,UACI,qBAAK/B,UAAW8B,IAAIE,cAApB,SACKV,IAEL,sBAAKtB,UAAW8B,IAAIG,SAApB,UACI,qBAAKjC,UAAW8B,IAAIxB,QAApB,SACKoB,IAEL,cAACjB,EAAD,CAAqBG,SAjBX,SAACsB,GACnBzC,EAAM0C,YAAYD,EAAOL,yBAIlB,cAAC,IAAD,CAAUnC,GAAI,a,wBCRd0C,sBACXxC,aAXoB,SAACV,GAAD,MAAY,CAChCmC,YAAanC,EAAMmC,gBAGI,SAACgB,GAAD,MAAe,CACtCF,YAAa,SAACN,GACVQ,EAASC,YAAmBT,SAMhCxC,IAFW+C,CAGThB","file":"static/js/4.d2f6e454.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Xuk5_\",\"dialogs_items\":\"Dialogs_dialogs_items__4cdNI\",\"dialog\":\"Dialogs_dialog__1EN1M\",\"messages\":\"Dialogs_messages__JYjsa\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"} />\r\n            };\r\n            return <Component {...this.props} />\r\n        };\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport dlgs from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/messages/' + props.id;\r\n\r\n    return (\r\n        <div className={dlgs.dialog + '' + dlgs.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport dlgs from './../Dialogs.module.css';\r\n\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className={dlgs.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Messages from './Messages/Messages';\r\nimport css from './Dialogs.module.css'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    const dialogsElements = state.dialogsData.map(\r\n        dlg => <DialogItem name={dlg.name} key={dlg.id} id={dlg.id} />\r\n    );\r\n\r\n    const messagesElements = state.messagesData.map(\r\n        msg => <Messages message={msg.message} key={msg.id} id={msg.id} />\r\n    );\r\n    const newMessageBody = state.newMessageBody;\r\n\r\n    const AddNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={\"./login\"} />\r\n    };\r\n\r\n    return (\r\n        <div className={css.dialogs}>\r\n            <div className={css.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={css.messages}>\r\n                <div className={css.message}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={AddNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 =  maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"newMessageBody\" placeholder={\"Enter your message\"}\r\n                validate={[required, maxLength50]} />\r\n            <button>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { sendMessageCreator } from '../../Redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogsPage: state.dialogsPage\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    sendMessage: (newMessageBody) => {\r\n        dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs); "],"sourceRoot":""}