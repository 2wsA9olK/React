{"version":3,"sources":["hoc/WithAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/ProfileInfo.module.css","components/Profile/ProfileLeft.module.css","components/Profile/Comment/MyPosts.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo.jsx","components/Profile/ProfileLeft.jsx","components/Profile/Comment/Post.jsx","components/Profile/Comment/MyPosts.jsx","components/Profile/Comment/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","type","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","pfInfo","content","userInfo","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","vk","twitter","instagram","youtube","album","ProfileLeft","css","ava","src","photos","large","userPhoto","photoAva","friends","Post","message","likeConst","MyPosts","memo","myPostsElement","myPostDate","reverse","map","mp","mps","newPost","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","myPosts","myPost","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","ProfilePage","dispatch","addPostActionCreator","Profile","pf","leftContent","rightContent","ProfileContainer","userId","match","params","authorizeduserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.e34f1541.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={\"/login\"} />\r\n            };\r\n            return <Component {...this.props} />\r\n        };\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3yKmd\",\"rightContent\":\"Profile_rightContent__3VqYu\",\"leftContent\":\"Profile_leftContent__vTRRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"ProfileInfo_userInfo__3MCDw\",\"album\":\"ProfileInfo_album__qrFPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileLeft_ava__3nAYg\",\"photoAva\":\"ProfileLeft_photoAva__ONvP0\",\"friends\":\"ProfileLeft_friends__2wtZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"MyPosts_newPost__tmXZS\",\"textarea\":\"MyPosts_textarea__1Nlrh\",\"myPost\":\"MyPosts_myPost__1jDEM\"};","import React, { useEffect, useState } from \"react\";\r\nimport Preloader from '../common/preloader';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditeMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false); \r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (<div>\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditeMode}>{props.status || \"Установите статус\"}</span>\r\n            </div>\r\n        }\r\n        {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} type=\"text\" autoFocus={true}\r\n                    onBlur={deactivateEditeMode} value={status} />\r\n            </div>\r\n        }\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../common/preloader';\r\nimport pfInfo from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n  if (!profile) {\r\n    return <div className={pfInfo.content}>\r\n      <div className={pfInfo.userInfo}>\r\n        <Preloader />\r\n      </div>\r\n      <div className={pfInfo.album}>\r\n        Album\r\n      </div>\r\n    </div>\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={pfInfo.content}>\r\n      <div className={pfInfo.userInfo}>\r\n        {profile.fullName}<br />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        About me: {profile.aboutMe}<br />\r\n        LookingForAJob: {profile.lookingForAJob}<br />\r\n        LookingForAJobDescription: {profile.lookingForAJobDescription}<br />\r\n        Contacts: <br />\r\n        Facebook: {profile.contacts.facebook}<br />\r\n        Vk: {profile.contacts.vk}<br />\r\n        Twitter: {profile.contacts.twitter}<br />\r\n        Instagram: {profile.contacts.instagram}<br />\r\n        Youtube: {profile.contacts.youtube}<br />\r\n\r\n      </div>\r\n      <div className={pfInfo.album}>\r\n        Album\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport Preloader from '../common/preloader';\r\nimport css from './ProfileLeft.module.css';\r\nimport userPhoto from \"./../../assets/images/iconUsers.png\";\r\n\r\nfunction ProfileLeft(props) {\r\n\r\n  if (!props.profile) {\r\n    return <div>\r\n      <div className={css.ava}>\r\n        <Preloader />\r\n      </div>\r\n      <div className={css.friends}>\r\n        Friends\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <div className={css.content}>\r\n      <div className={css.ava}>\r\n        <img src={props.profile.photos.large != null\r\n        ? props.profile.photos.large\r\n        : userPhoto } className={css.photoAva} />\r\n      </div>\r\n      <div className={css.friends}>\r\n        Friends\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileLeft;","import React from 'react';\r\n//import cm  from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            {props.message}  \r\n            <span> Like:</span> {props.likeConst}\r\n            \r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from 'react';\r\nimport Post from './Post';\r\nimport mps from './MyPosts.module.css'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let myPostsElement = [...props.myPostDate]\r\n        .reverse()\r\n        .map(mp => <Post message={mp.message} likeConst={mp.likeConst} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            MyPosts\r\n            <div className={mps.newPost}>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={mps.myPosts}>\r\n                <div className={mps.myPost}>{myPostsElement}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"newPostText\"\r\n                validate={[required, maxLength10]} />\r\n            <button>Add Post</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n        \r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myPostDate: state.ProfilePage.myPostDate,\r\n        newPostText: state.ProfilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport pf from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport ProfileLeft from './ProfileLeft';\r\nimport MyPostsContainer from './Comment/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={pf.content}>\r\n      <div className={pf.leftContent}>\r\n      <ProfileLeft profile={props.profile}/>\r\n      </div>\r\n      <div className={pf.rightContent}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <MyPostsContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getStatus, updateStatus } from './../../Redux/profile-reducer'\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId =  this.props.authorizeduserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"RENDER PROFILE\");\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} updateStatus={this.props.updateStatus} />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => { \r\n  //console.log('mapStateToProps PROFILE');\r\n  return ({\r\n  profile: state.ProfilePage.profile,\r\n  status: state.ProfilePage.status,\r\n  authorizeduserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth \r\n})}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}